knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(readxl)
un_data = read_excel("data.xlsx")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(readxl)
un_data = read_excel("data.xlsx")
View(un_data)
un_data = read_excel("data.xlsx", skip = 1:11)
un_data = read_excel("data.xlsx", skip = 11)
un_data = read_excel("data.xlsx", skip = 12)
un_data = read_excel("data.xlsx", skip = 16)
un_data = read_excel("data.xlsx", skip = 15)
un_data = read_excel("data.xlsx", skip = 15)
colnames(un_data) <- as.character(unlist(un_data[1, ])
un_data = read_excel("data.xlsx", skip = 15)
colnames(un_data) <- as.character(unlist(un_data[1, ]))
un_data = read_excel("data.xlsx", skip = 15)
colnames(un_data) <- as.character(unlist(un_data[1, ]))
un_data = un_data[-1,]
knitr::opts_chunk$set(echo = FALSE)
ggplot(data = exercise_df, aes(x = log(Weight))) + # looks skewed right, so did a log transformation
geom_histogram(bins = 12, color = "black", fill = "grey80") +
labs(x = "Weight",  y = "Frequency", title = "Weight") +
theme_minimal()
knitr::opts_chunk$set(echo = FALSE)
library(ggplot2)
library(lubridate)
library(car)
exercise_df <- read.csv("gym_members_exercise_tracking.csv")
names(exercise_df)[names(exercise_df) == 'Weight..kg.'] <- 'Weight'
names(exercise_df)[names(exercise_df) == 'Session_Duration..hours.'] <- 'Session_Duration'
names(exercise_df)[names(exercise_df) == 'Height..m.'] <- 'Height'
names(exercise_df)[names(exercise_df) == 'Water_Intake..liters.'] <- 'Water_Intake'
names(exercise_df)[names(exercise_df) == 'Workout_Frequency..days.week.'] <- 'Workout_Frequency'
head(exercise_df)
ggplot(data = exercise_df, aes(x = log(Weight))) + # looks skewed right, so did a log transformation
geom_histogram(bins = 12, color = "black", fill = "grey80") +
labs(x = "Weight",  y = "Frequency", title = "Weight") +
theme_minimal()
ggplot(data = exercise_df, aes(x = log(BMI))) + # added log because it was right skewed
geom_histogram(bins = 12, color = "black", fill = "grey80") +
labs(x = "BMI",  y = "Frequency", title = "BMI") +
theme_minimal()
plot(~ Calories_Burned + Avg_BPM + Session_Duration + log(Weight),
data = exercise_df)
lm_exercise <- lm(Calories_Burned ~ log(Weight) + Session_Duration + Avg_BPM, data = exercise_df)
summary(lm_exercise)
plot(lm_exercise, which = 1, id.n = 0, add.smooth = FALSE)
plot(lm_exercise, which = 2)
lm_exercise <- lm(Calories_Burned ~ Weight + Session_Duration + Avg_BPM, data = exercise_df)
summary(lm_exercise)
plot(lm_exercise, which = 1, id.n = 0, add.smooth = FALSE)
plot(lm_exercise, which = 2)
ggplot(data = exercise_df, aes(x = Weight)) + # looks skewed right, so did a log transformation
geom_histogram(bins = 12, color = "black", fill = "grey80") +
labs(x = "Weight",  y = "Frequency", title = "Weight") +
theme_minimal()
ggplot(data = exercise_df, aes(x = log(BMI))) + # added log because it was right skewed
geom_histogram(bins = 12, color = "black", fill = "grey80") +
labs(x = "BMI",  y = "Frequency", title = "BMI") +
theme_minimal()
ggplot(data = exercise_df, aes(x = log(Weight))) + # looks skewed right, so did a log transformation
geom_histogram(bins = 12, color = "black", fill = "grey80") +
labs(x = "Weight",  y = "Frequency", title = "Weight") +
theme_minimal()
ggplot(data = exercise_df, aes(x = log(BMI))) + # added log because it was right skewed
geom_histogram(bins = 12, color = "black", fill = "grey80") +
labs(x = "BMI",  y = "Frequency", title = "BMI") +
theme_minimal()
lm_exercise <- lm(Calories_Burned ~ log(Weight) + Session_Duration + Avg_BPM, data = exercise_df)
summary(lm_exercise)
plot(lm_exercise, which = 1, id.n = 0, add.smooth = FALSE)
plot(lm_exercise, which = 2)
lm_exercise <- lm(Calories_Burned ~ log(Weight) + Session_Duration, data = exercise_df)
summary(lm_exercise)
plot(lm_exercise, which = 1, id.n = 0, add.smooth = FALSE)
plot(lm_exercise, which = 2)
lm_exercise <- lm(Calories_Burned ~ log(Weight) + Session_Duration + Avg_BPM, data = exercise_df)
summary(lm_exercise)
plot(lm_exercise, which = 1, id.n = 0, add.smooth = FALSE)
plot(lm_exercise, which = 2)
cov(exercise_df)
cov(lm_exercise)
cov(exercise_df)
cor(exercise_df)
corr(exercise_df)
cor(exercise_df)
cor(exercise_df)
cor(exercise_df)
num_exercise_df = exercise_df |> select(Age, Weight, Height, Max_BPM, Avg_BPM, Resting_BPM, Session_Duration, Calories_Burned, Fat_Percentage, Water_Intake, BMI)
cor(num_exercise_df)
num_exercise_df = exercise_df |> select(Age, Weight, Height, Max_BPM, Avg_BPM, Resting_BPM, Session_Duration, Calories_Burned, Fat_Percentage, Water_Intake, BMI)
cor(num_exercise_df)
num_exercise_df = exercise_df |> select(Calories_Burned, Age, Weight, Height, Max_BPM, Avg_BPM, Resting_BPM, Session_Duration, Fat_Percentage, Water_Intake, BMI)
cor(num_exercise_df)
ggplot(data = exercise_df, aes(x = Calories_Burned)) +
geom_histogram(bins = 12, color = "black", fill = "grey80") +
labs(x = "Calories Burned",  y = "Frequency", title = "Histogram of Calories Burned") +
theme_minimal()
ggplot(data = exercise_df, aes(x = log(Avg_BPM))) +
geom_histogram(bins = 12, color = "black", fill = "grey80") +
labs(x = "Avg_BPM",  y = "Frequency", title = "Avg_BPM") +
theme_minimal()
ggplot(data = exercise_df, aes(x = Session_Duration)) +
geom_histogram(bins = 12, color = "black", fill = "grey80") +
labs(x = "Session Duration",  y = "Frequency", title = "Session Duration") +
theme_minimal()
ggplot(data = exercise_df, aes(x = Calories_Burned)) +
geom_histogram(bins = 12, color = "black", fill = "grey80") +
labs(x = "Calories Burned",  y = "Frequency", title = "Histogram of Calories Burned") +
theme_minimal()
ggplot(data = exercise_df, aes(x = Avg_BPM)) +
geom_histogram(bins = 12, color = "black", fill = "grey80") +
labs(x = "Avg_BPM",  y = "Frequency", title = "Avg_BPM") +
theme_minimal()
ggplot(data = exercise_df, aes(x = Session_Duration)) +
geom_histogram(bins = 12, color = "black", fill = "grey80") +
labs(x = "Session Duration",  y = "Frequency", title = "Session Duration") +
theme_minimal()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(readxl)
estimates = read_excel("data.xlsx", skip = 15, sheet = "Estimates")
colnames(estimates) <- as.character(unlist(estimates[1, ]))
estimates = estimates[-1,]
mediums = read_excel("data.xlsx", skip = 15, sheet = "Medium variant")
colnames(mediums) <- as.character(unlist(mediums[1, ]))
mediums = mediums[-1,]
est_values <- estimates |> filter(Type != "Label/Separator") |>
select(Index, Year:last_col()) |>
mutate(across(where(is.character), as.double, .names = '{col}'))
# converts all numeric columns from characters into doubles
# removes Label/Separator type
estimates$Index <- estimates$Index |> as.double()
# creates key column of Index and converts to double
estimates <- estimates |> select(Index, `Region, subregion, country or area *`,
Type)
# selecting relevant columns from original database
estimates <- estimates |> full_join(est_values, join_by(Index))
# only includes relevant data in Estimates
med_values <- mediums |> filter(Type != "Label/Separator") |>
select(Index, Year:last_col()) |>
mutate(across(where(is.character), as.double, .names = '{col}'))
mediums$Index <- mediums$Index |> as.double()
mediums <- mediums |> select(Index, `Region, subregion, country or area *`,
Type)
mediums <- mediums |> full_join(med_values, join_by(Index))
# replicated the above for the mediums dataset
#renaming columns
corrected_colnames <- c(
"index",
"region_subregion_country_area",
"type",
"year",
"total_pop_january_thousands",
"total_pop_july_thousands",
"male_pop_july_thousands",
"female_pop_july_thousands",
"pop_density_july_person_per_sq_km",
"pop_sex_ratio_july_males_per_100_females",
"med_age_july_years",
"natural_change_births_minus_deaths_thousands",
"rate_of_natural_change_per_1000",
"population_change_thousands",
"population_growth_rate_percentage",
"population_annual_doubling_time_years",
"births_thousands",
"births_by_woman_aged_15_to_19_thousands",
"crude_birth_rate_per_1000_pop",
"total_fertility_rate_live_births_per_woman",
"net_reproduction_rate_surviving_daughters_per_woman",
"mean_age_childbearing_years",
"sex_ratio_at_birth_males_per_100_female_births",
"total_deaths_thousands",
"male_deaths_thousands",
"female_deaths_thousands",
"crude_death_rate_deaths_per_1000_population",
"total_life_expectancy_at_birth_years",
"male_life_expectancy_at_birth_years",
"female_life_expectancy_at_birth_years",
"total_life_expectancy_at_age_15_years",
"male_life_expectancy_at_age_15_years",
"female_life_expectancy_at_age_15_years",
"total_life_expectancy_at_age_65_years",
"male_life_expectancy_at_age_65_years",
"female_life_expectancy_at_age_65_years",
"total_life_expectancy_at_age_80_years",
"male_life_expectancy_at_age_80_years",
"female_life_expectancy_at_age_80_years",
"infant_deaths_under_age_1_thousands",
"infant_morality_rate_infant_deaths_per_1000_births",
"live_births_surviving_to_age_1_thousands",
"under_five_deaths_thousands",
"deaths_under_age_5_per_1,000_live_births",
"total_male_mortality_before_age_40_per_1000_births",
"male_mortality_before_age_40_per_1000_births",
"female_mortality_before_age_40_per_1000_births",
"total_mortality_before_age_60_per_1000_births",
"male_mortality_before_age_60_per_1000_births",
"female_mortality_before_age_60_per_1000_births",
"deaths_under_age_50_per_1000_total_alive_at_15",
"deaths_under_age_50_per_1000_males_alive_at_15",
"deaths_under_age_50_per_1000_females_alive_at_15",
"deaths_under_age_60_per_1000_total_alive_at_15",
"deaths_under_age_60_per_1000_males_alive_at_15",
"deaths_under_age_60_per_1000_females_alive_at_15",
"net_num_migrants_thousands",
"net_migration_rate_per_1000"
)
colnames(estimates) <- corrected_colnames
colnames(mediums) <- corrected_colnames
View(mediums)
# fertility rate in children/woman from 1950 - 2100 (Jonathan)
combined_data <- rbind(estimates, mediums)
View(combined_data)
rm(combined_data)
# fertility rate in children/woman from 1950 - 2100 (Jonathan)
combined_data <- rbind(estimates, mediums)
combined_data %>%
ggplot(aes(x = year, y = total_fertility_rate_live_births_per_woman)) +
ggline()
combined_data %>%
ggplot(aes(x = year, y = total_fertility_rate_live_births_per_woman)) +
geom_line()
c
c
c
# fertility rate in children/woman from 1950 - 2100 (Jonathan)
combined_data <- rbind(estimates, mediums)
combined_data %>%
filter(region_subregion_country_area == 'World')
combined_data %>%
filter(region_subregion_country_area == 'World') %>%
ggplot(aes(x = year, y = total_fertility_rate_live_births_per_woman)) +
geom_line()
rm(combined_data)
# fertility rate in children/woman from 1950 - 2100 (Jonathan)
combined_data <- rbind(estimates, mediums)
combined_data %>%
filter(region_subregion_country_area == 'World') %>%
ggplot(aes(x = year, y = total_fertility_rate_live_births_per_woman)) +
geom_line()
combined_data %>%
filter(region_subregion_country_area == 'World') %>%
ggplot(aes(x = year, y = total_fertility_rate_live_births_per_woman)) +
geom_line() +
labs(title = "Fertility rate: children per woman, 1950 to 2100",
subtitle = "Projections from 2024 onwards are based on the UN's medium scenario.")
combined_data %>%
filter(region_subregion_country_area == 'World') %>%
ggplot(aes(x = year, y = total_fertility_rate_live_births_per_woman)) +
geom_line() +
labs(title = "Fertility rate: children per woman, 1950 to 2100",
subtitle = "Projections from 2024 onwards are based on the UN's medium scenario.",
"Live Births Per Woman")
